Const VAULT_NAME As String = "SRC Vault"

Dim swApp As SldWorks.SldWorks
Dim swPdmVault As IEdmVault5
Dim fileTitle As String
Dim modelPath As String


Sub main()

    Set swApp = Application.SldWorks
    
    Dim swModel As SldWorks.ModelDoc2
    
    Set swModel = swApp.ActiveDoc
    
    fileTitle = swModel.GetTitle
    modelPath = swModel.GetPathName()
    
    If Not swModel Is Nothing Then
    
        Set swPdmVault = New EdmVault5
        swPdmVault.LoginAuto VAULT_NAME, 0
        
        If swPdmVault.IsLoggedIn Then
            swApp.CloseDoc fileTitle
            CheckInModel swModel, swPdmVault
            ChangeState swModel, swPdmVault
            
            'Close File
            Set swModel = Nothing
            'swApp.CloseDoc fileTitle
            MsgBox "Checked In"
        Else
            MsgBox "Please login to vault"
        End If
    
    Else
        MsgBox "Please open the model"
    End If
    
End Sub

Sub CheckInModel(model As SldWorks.ModelDoc2, vault As IEdmVault5)
    
    Dim swPdmFile As IEdmFile5
    Set swPdmFile = vault.GetFileFromPath(modelPath)

    If Not swPdmFile Is Nothing Then
        
        On Error GoTo catch

        Dim res As Boolean
        
        Dim swPdmFolder As IEdmFolder5
        Set swPdmFolder = vault.GetFolderFromPath(Left(modelPath, InStrRev(modelPath, "\")))

try:
        
        Dim batchUnlockUtil As EdmLib.IEdmBatchUnlock2
        Set batchUnlockUtil = vault.CreateUtility(EdmUtil_BatchUnlock)
        
        Dim SelItems() As EdmLib.EdmSelItem
        ReDim SelItems(0)
        
        SelItems(0).mlDocID = swPdmFile.ID
        SelItems(0).mlProjID = swPdmFolder.ID

        batchUnlockUtil.AddSelection vault, SelItems

        batchUnlockUtil.CreateTree 0, EdmUnlockBuildTreeFlags.Eubtf_MayUnlock + EdmUnlockBuildTreeFlags.Eubtf_RefreshFileListing

        batchUnlockUtil.GetFileList EdmUnlockFileListFlag.Euflf_GetUnlocked

        batchUnlockUtil.UnlockFiles 0, Nothing
        
        res = False
        GoTo finally
catch:
        Debug.Print Err.Number & ": "; Err.Description
        res = True
        GoTo finally
    
finally:
        'model.ReloadOrReplace Not res, modelPath, Not res
        

    Else
        Err.Raise vbError, "", "Specified model doesn't exist in the vault"
    End If
    
End Sub

Sub ChangeState(model As SldWorks.ModelDoc2, vault As IEdmVault5)
    
    Dim swPdmFile As IEdmFile5
    Set swPdmFile = vault.GetFileFromPath(modelPath)

    If Not swPdmFile Is Nothing Then
        
        On Error GoTo catch

        Dim res As Boolean
        
        Dim swPdmFolder As IEdmFolder5
        Set swPdmFolder = vault.GetFolderFromPath(Left(modelPath, InStrRev(modelPath, "\")))

try:
        
        Dim batchChangeStateUtil As EdmLib.IEdmBatchChangeState
        Set batchChangeStateUtil = vault.CreateUtility(EdmUtil_BatchChangeState)
        
        batchChangeStateUtil.AddFile swPdmFile.ID, swPdmFolder.ID
        
        Dim i As Integer
        Dim vDepend As Variant
        
        vDepend = swApp.GetDocumentDependencies2(modelPath, True, False, False)
        
        For i = 0 To (UBound(vDepend) - 1) / 2
            
            Dim filePath As String
            filePath = vDepend(2 * i + 1)
            
            Dim pdmFile As EdmLib.IEdmFile5
            Dim pdmFolder As EdmLib.IEdmFolder5
            
            Set pdmFile = vault.GetFileFromPath(filePath, pdmFolder)
            
            If Not pdmFile Is Nothing Then
            
                If pdmFolder.ID = swPdmFolder.ID Then
                       
                    batchChangeStateUtil.AddFile pdmFile.ID, pdmFolder.ID
            
                End If
                
            End If
            
        Next i
        
change:

        batchChangeStateUtil.CreateTree "Modeling Completed"

        batchChangeStateUtil.ChangeState 0, Nothing
        
        res = False
        GoTo finally
catch:
        Debug.Print Err.Number & ": "; Err.Description
        res = True
        GoTo finally
    
finally:
        'model.ReloadOrReplace Not res, modelPath, Not res
        

    Else
        Err.Raise vbError, "", "Specified model doesn't exist in the vault"
    End If
    
End Sub

